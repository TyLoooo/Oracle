一、触发器的基本概念
  （1）触发器类似于函数和过程，结构相同。
  （2）在数据库中必须以独立对象的身份存储。
  （3）触发器在事件发生时隐式的运行，不接受参数，不能被调用。
  （4）运行触发器的方式叫做激发触发器，可对数据库DML操作以及视图进行操作。
 1、触发器类型
  （1）数据操纵语言（DML）触发器。
  （2）替代（INSTEAD OF）触发器。
  （3）数据定义语言（DDL）触发器。
  （4）数据库事件触发器。
 2、关联触发器
   把一个触发器的动作与另一个触发器联系起来，使之触发另一个触发器。
 3、使用触发器的约束
  （1）select语句不能触发触发器。
  （2）不能显式调用，只能事件触发。
  （3）触发器可以调用数据库存储过程、函数和包。
二、DML触发器
  1、如果多个触发器被定义为相同的时间和相同事件，则后建立的触发器是有效的，只触发后建立的触发器，先建立的触发器不执行。
  2、行级触发器与语句级触发器的区别
   主要在于其触发的次数不同。
  （1）如果该语句只影响一行，则语句级与行级触发效果相同。
  （2）如果该语句影响多行，则行级触发的次数比语句级触发的次数多。
  （3）根据触发器的触发次数具体情况来创建一个语句级还是行级触发器。
  3、触发器谓词
   当一个触发器中的触发事件中既有删除、更新又有插入时，触发器体中使用谓词（INSERTING、UPDATING或DELETING）判断是哪个触发事件触发了触发器，从而把多种触发事件组成一个触发器。
   例：
   CREATE OR REPLACE TRIGGER emp_infor
   BEFORE INSERT OR DELTE OR UPDATE ON employee
   FOR EACH ROW
   BEGIN
     IF  INSERTING THEN
     INSERT INTO emp_infor(emp_id,emp_name,emp_job,emp_sal) 
     VALUES (upper(:NEW.empno),:new.ename,:new.job,:new. sal);
    END IF;
   END;
  4、触发器通用语法
   CREATE [OR REPLACE] TRIGGER trigger_name
   {BEFORE | AFTER | INSTEAD OF} triggering_event
   referencing_clause
   [WHEN trigger_condition]
   [FOR EACH ROW]
   trigger_body
   其中：
   trigger_condition 为指定的限制条件，以确定触发器体是否被执行。满足此限制条件，触发器体被执行，否则触发器体不执行。在语句级触发器中不要使用when语句。
  5、行级触发器
   （1）访问行级触发器内部正在处理的数据：两个相关标识符：old和：new。
      a、只能在after和before类型中使用标识符。
      b、语句级触发器不能使用。
      c、注意有“：”符号。
      d、when条件中使用标识符或在REFERENCING子句中为old和new起的别名中不加“：”。
      e、在before中只能修改“：new”，不能修改“：old”；在after中不能修改“：new”。
      触发时机AFTER后， :new的值已经被插入到表里， 因此:new不能修改；触发时机BEFORE后， :new的值还没有被插入到表里， 因此:new可以修改，而此时， :old值是表中没有被修改的值，因此不能被修改。




